plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'com.palantir.docker' version "0.35.0"
}

group = 'springBoot'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '20'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'


	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'

	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-impl
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'

	// https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-jackson
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// https://mvnrepository.com/artifact/io.springfox/springfox-boot-starter
	implementation 'io.springfox:springfox-boot-starter:3.0.0'

	// https://mvnrepository.com/artifact/org.json/json
	implementation 'org.json:json:20230618'

	// https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-ui
	implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'

//	// https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webmvc-ui
//	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	// https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation
	implementation 'org.springframework.boot:spring-boot-starter-validation:3.1.3'

//	// https://mvnrepository.com/artifact/com.palantir.gradle.docker/gradle-docker
//	implementation 'com.palantir.gradle.docker:gradle-docker:0.35.0'
//	// https://mvnrepository.com/artifact/com.palantir.docker-run/com.palantir.docker-run.gradle.plugin
//	implementation 'com.palantir.docker-run:com.palantir.docker-run.gradle.plugin:0.35.0'




}

tasks.named('test') {
	useJUnitPlatform()
}

String imageName = "image_$project.name"

docker {
	name imageName
	files "build/libs/${bootJar.archiveFileName.get()}"
	buildArgs([JAR_FILE: bootJar.archiveFileName.get()])
}
